name: Benchmarks

on:
  workflow_dispatch:
  push:
    branches: [master]

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:
  deploy-benchmark-teardown:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set a unique run identifier
        run: echo "UNIQE_ID=${{ github.run_number }}-${{ github.run_attempt }}" >> $GITHUB_ENV

      # - id: "auth"
      #   name: "Authenticate to Google Cloud"
      #   uses: "google-github-actions/auth@v1"
      #   with:
      #     credentials_json: "${{ secrets.GOOGLE_CI_SA_CREDENTIALS }}"

      # - id: "get-credentials"
      #   name: Get GKE credentials
      #   uses: "google-github-actions/get-gke-credentials@v1"
      #   with:
      #     cluster_name: "${{ secrets.GKE_CI_CLUSTER_NAME }}"
      #     location: "${{ secrets.GKE_CI_CLUSTER_REGION }}"

      # - id: "helm-install"
      #   name: Deploy to Kubernetes using helm
      #   run: |
      #     helm upgrade --install papyrus-${UNIQE_ID} deployments/helm/ \
      #     --namespace papyrus \
      #     --values deployments/helm/CI/default_values.yaml \
      #     --set ingress.host=papyrus-${UNIQE_ID}.${{ secrets.GKE_CI_HOST }}

      # - name: Wait for papyrus pods to be ready
      #   run: kubectl --namespace papyrus rollout status deployment papyrus-${UNIQE_ID}

      - name: Set load_test durration
        run: |
          # The amount of time we want the load test to run
          echo "DURRATION=1m" >> $GITHUB_ENV
          # The max amount of time we are willing to wait for the load test to complete (must be greater then DURRATION)
          echo "DURRATION_TIMEOUT=5m" >> $GITHUB_ENV

      - name: Run load test
        # run: sh -c "deployments/helm/CI/run_benchmark.bash ${UNIQE_ID} ${DURRATION} ${DURRATION_TIMEOUT}"
        run: |
          cat >/tmp/results.json <<EOL
          [
              {
                  "name": "My Custom Smaller Is Better Benchmark - CPU Load",
                  "unit": "Percent",
                  "value": 100
              },
              {
                  "name": "My Custom Smaller Is Better Benchmark - Memory Used",
                  "unit": "Megabytes",
                  "value": 350,
                  "range": "3",
                  "extra": "Value for Tooltip: 25\nOptional Num #2: 100\nAnything Else!"
              }
          ]
          EOL

      # Download previous benchmark result from cache (if exists)
      - name: Download previous benchmark data
        uses: actions/cache@v1
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark

      # Run `github-action-benchmark` action
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: My Test Benchmark
          # What benchmark tool the output.txt came from
          tool: "customSmallerIsBetter"
          # Where the output from the benchmark tool is stored
          output-file-path: /tmp/results.json
          # Where the previous data file is stored
          external-data-json-path: ./cache/benchmark-data.json
          # Workflow will fail when an alert happens
          fail-on-alert: true
          auto-push: false

      - name: Push benchmark result
        run: |
          git fetch
          git checkout gh-pages
          mv cache/new-benchmark-data.json cache/benchmark-data.json
          git config --global user.name "eran-test-user"
          git config --global user.email "username@users.noreply.github.com"
          git add .
          git commit -m "${UNIQE_ID}"
          git push 'https://eranreshef-starkware:${{ secrets.GITHUB_TOKEN }}@github.com/eranreshef-starkware/test-benchmark.git' gh-pages:gh-pages
      # - name: Clean the deployment
      #   if: always()
      #   run: helm delete --namespace papyrus papyrus-${UNIQE_ID}
